#
# @lc app=leetcode id=676 lang=python3
#
# [676] Implement Magic Dictionary
#

# @lc code=start
from collections import defaultdict

class MagicDictionary:

    '''
    intuition: declare a dictionary mapping each candidate to its frequency. the candidates are generated by a helper function. for each index i in the given word, replace it with a wildcard * and concatenate it with the rest of the word;

    1. for each word in the dictionary, generate a list of candidates
    2. to search a target, generate candidates for the target and see if self.lookup[candidate] == 1 and target not in self.words
        - original_list of candidates from the given word
        - new list of candidates from the target word 
    # 'hello', 'hallo' => target 'hello' => true
    self.lookup[candidate] > 1. 'h*llo': 2 inside our self.lookup table

    '''

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.lookup = defaultdict(int) # a dictionary mapping each neighboring word to its frequency.

    def buildDict(self, dictionary):
        self.words = set(dictionary)
        for word in self.words: # generate a wildcard neighbors list for each word 
            for neighbor in self.get_neighbors(word):
                self.lookup[neighbor] += 1
        print(self.lookup)

    def search(self, searchWord): # 
        for neighbor in self.get_neighbors(searchWord):
            if self.lookup[neighbor] > 1 or (self.lookup[neighbor] == 1 and searchWord not in self.words):
                return True
        return False

    def get_neighbors(self, word):
        for i in range(len(word)):
            yield word[:i] + '*' + word[i+1:] # a wildcard


# Your MagicDictionary object will be instantiated and called as such:
# obj = MagicDictionary()
# obj.buildDict(dictionary)
# param_2 = obj.search(searchWord)
# @lc code=end

## {'*ello': 1, 'h*llo': 1, 'he*lo': 1, 'hel*o': 1, 'hell*': 1})

dictionary = ["hello", 'hallo']
magicDictionary = MagicDictionary()
magicDictionary.buildDict(dictionary)
# ans = magicDictionary.search('hhllo')
# ans = magicDictionary.search('jello')
# ans = magicDictionary.search('hello')
# print(ans)
